# This is a basic workflow to help you get started with Actions

name: Deploy Static Application to Ubuntu Apache2 Server

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Inject Version Details to the Application
        run: |
          echo $GITHUB_ENV
          sed -i "s|REPLACEAPPENVIRONMENT|$GITHUB_ENV|g" myapp/version.html
          cat myapp/version.html

      - name: Upload the Artifact
        uses: actions/upload-artifact@v3
        with:
          name: myapp-package
          path: myapp

  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: build
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Download the myapp-package
        uses: actions/download-artifact@v3
        with:
          name: myapp-package
          path: myapp
      
      - name: Verify the downloadad packages
        run: | 
          ls -la
          pwd

      - name: Check version.html from the artifacts
        run: |
          cat myapp/version.html

  deployment-converged:
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: development
      url: http://20.121.128.204/contact.html
    steps:
      - name: Clone the Code
        uses: actions/checkout@v3

      - name: Download the myapp-package
        uses: actions/download-artifact@v3
        with:
          name: myapp-package
          path: myapp
      
      - name: Verify the downloadad packages
        run: | 
          ls
          pwd

      - name: Check version.html from the artifacts
        run: |
          cat myapp/version.html

      - name: Copy and deploy
        uses: mdallasanta/ssh-scp-deploy@v1.2.0
        with:
          local: 'myapp'                                                  # Local file path - REQUIRED false - DEFAULT ./
          remote: '/home/azureuser/'                                                 # Remote file path - REQUIRED false - DEFAULT ~/
          host: ${{secrets.REMOTE_HOST}}                                      # Remote server address - REQUIRED true
          port: ${{secrets.PORT}}                                      # Remote server port - REQUIRED false - DEFAULT 22
          user: ${{secrets.REMOTE_USER}}                                      # Remote server user - REQUIRED true
          #password: ${{secrets.PASSWORD}}                              # User password - REQUIRED at least one of "password" or "key" 
          key: ${{secrets.SERVER_SSH_KEY}}                                        # Remote server private key - REQUIRED at least one of "password" or "key" 
          pre_upload: echo "Copy over"  # Command to run via ssh before scp upload - REQUIRED false
          post_upload: sudo mv myapp/* /var/www/html/  # Command to run via ssh after scp upload - REQUIRED false
          ssh_options: -o StrictHostKeyChecking=no                     # A set of ssh_option separated by -o - REQUIRED false - DEFAULT -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null
          scp_options: -v